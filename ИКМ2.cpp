// ИКМ2
//Шарики.В одной компьютерной игре игрок выставляет в линию шарики
//разных цветов.Когда образуется непрерывная цепочка из трех и более
//шариков одного цвета, она удаляется из линии.Все шарики при этом
//сдвигаются друг к другу, и ситуация может повториться.Напишите
//программу, которая по данной ситуации определяет, сколько шариков будет
//сейчас уничтожено.Естественно, непрерывных цепочек из трех и более
//одноцветных шаров в начальный момент может быть не более одной.
//Входные данные : даны количество шариков в цепочке(не более 105) и цвета
//шариков(от 0 до 9, каждому цвету соответствует свое целое число).
//Выходные данные : требуется вывести количество шариков, которое будет
//уничтожено.
//Примеры :
//	(входные данные)
//	5 1 3 3 3 2
//	(выходные данные)
//	3
//	(входные данные)
//	10 3 3 2 1 1 1 2 2 3 3
//	(выходные данные)
//	10

#include "Header.h"
#include <iostream>
#include <stdexcept>
#include <string>
#include <cctype>
#include <sstream>
#include <climits>
#include <windows.h> 

int main()
{
    setlocale(LC_ALL, "Russian");
    SetConsoleCP(1251);           
    SetConsoleOutputCP(1251);     

    try
    {
        cout << "=== Игра 'Шарики' ===" << endl;
        cout << "Правила: при вводе цепочки из трех и более одинаковых шариков они удаляются." << endl << endl;

        // Получаем количество шариков
        int n = checkingForInput::getInteger("Введите количество шариков (1-100000): ", 1, 100000);

        LinkedList balls; // Создаем список шариков
        cout << endl << "Введите цвета шариков (числа от 0 до 9):" << endl;

        // Заполняем список
        for (int i = 0; i < n; ++i)
        {
            int color = checkingForInput::getBallColor(i + 1);
            balls.push_back(color);
        }

        BallRow chain(balls); // Создаем цепочку шариков
        int removed = chain.findAndRemoveRow(); // Обрабатываем цепочку
        cout << endl << "Количество уничтоженных шариков: " << removed << endl;
    }
    catch (const exception& e) // Обработка ошибок
    {
        cerr << endl << "Ошибка: " << e.what() << endl;
        return 1;
    }

    return 0;
}